plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id "com.google.protobuf" version '0.9.1'
    id 'org.jetbrains.kotlin.kapt'
    id 'io.gitlab.arturbosch.detekt'
}

android {
    namespace 'app.mybad.data'
    compileSdk 33

    defaultConfig {
        minSdk 26
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        testInstrumentationRunner "app.mybad.data.test.HiltTestRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }
}

kapt {
    correctErrorTypes = true
}

dependencies {

    implementation project(path: ':domain')
    implementation project(path: ':notifications')

    implementation 'androidx.core:core-ktx:1.9.0'

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // Logging interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.1'

    //Hilt
    implementation("com.google.dagger:hilt-android:$hilt_version")
    implementation 'androidx.test:runner:1.5.2'
    testImplementation project(path: ':app')
    kapt("com.google.dagger:hilt-android-compiler:$hilt_version")
    
    //RoomDB
    implementation "androidx.room:room-ktx:$room"
    implementation "androidx.room:room-runtime:$room"
    annotationProcessor "androidx.room:room-compiler:$room"
    kapt "androidx.room:room-compiler:$room"

    // Preferences DataStore
    implementation "androidx.datastore:datastore-preferences:$data_store"
    implementation "androidx.datastore:datastore-preferences-core:$data_store"

    // Proto DataStore
    implementation "androidx.datastore:datastore:$data_store"
    implementation "androidx.datastore:datastore-core:$data_store"
    implementation "com.google.protobuf:protobuf-javalite:3.21.12"

    // coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test-jvm:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"

    //    local unit test
    implementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation 'junit:junit:4.13.2'
    testImplementation "com.google.truth:truth:1.1"
    testImplementation 'org.robolectric:robolectric:4.9'
    //    instrumentation test
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation "com.google.truth:truth:1.1.2"
    //RoomDB
    testImplementation "androidx.room:room-ktx:$room"
    testImplementation "androidx.room:room-runtime:$room"
    annotationProcessor "androidx.room:room-compiler:$room"
    kapt "androidx.room:room-compiler:$room"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    implementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.19.4"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}